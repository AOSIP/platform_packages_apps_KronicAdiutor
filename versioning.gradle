/**
 * Generic versioning gradle script
 */

def getCommitCount = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine "git", "rev-list", "HEAD", "--count"
            standardOutput = code
        }
        return code.toString().trim().toInteger()
    }
    catch (ignored) {
        println "- getCommitCount Exception: " + ignored
        return -1;
    }
}

def getVersionNumberInternal = { String moduleName, String versionPrefix, commitCount ->
    String versionStr = versionPrefix
    if (commitCount != -1) {
        versionStr += "." + commitCount
    }

    //  ...to gradle console for reference
    println "- " + moduleName + " "+ versionStr

    return versionStr
}

def currGitBranchInternal = { ->
    try {
        def code = new ByteArrayOutputStream()
        exec {
            commandLine "git", "rev-parse", "--abbrev-ref", "HEAD"
            standardOutput = code
        }
        def str = code.toString().trim();//.replace('/','_');
        println "- currGitBranch: " + str
        return str
    }
    catch (ignored) {
        println "- currGitBranch Exception: " + ignored
        return "";
    }
}


ext {
    commitCount = getCommitCount()

    /**
     * generic method with 2 params: moduleName & versionPrefix
     * return major.minor.commit_count
     */
    getVersionNumber = getVersionNumberInternal

    //  ...Convenient property for most modules with 1.0 version
    getVersionNumber1 = { String moduleName ->
        return getVersionNumberInternal(moduleName, "1.0", commitCount)
    }

}
